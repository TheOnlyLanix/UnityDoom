Shader "Custom/Invulnerability" {
    Properties {
        _MainTex ("Base (RGB)", 2D) = "white" {}
        _Brightness ("Brightness", Float) = 0.5
    }
    SubShader {
        Pass {
            ZTest Always Cull Off ZWrite Off Lighting Off Fog { Mode off }
            CGPROGRAM
                #pragma vertex vert_img
                #pragma fragment frag
                #pragma fragmentoption ARB_precision_hint_fastest
                #include "UnityCG.cginc"
 
                sampler2D _MainTex;
				float _Brightness;
 
                float4 frag (v2f_img i) : COLOR 
				{
					float4 cColor = tex2D(_MainTex,i.uv); //this takes our sampler and turns the rgba into floats between 0 and 1

					cColor.rgb = (cColor.r + cColor.g + cColor.b)/3;//turn the image black and white

					cColor.rgb = (1- cColor);//invert the image

                    return cColor;
                }
            ENDCG
        }
    }
    Fallback off
}

